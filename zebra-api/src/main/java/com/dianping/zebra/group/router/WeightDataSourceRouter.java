package com.dianping.zebra.group.router;import java.util.Map;import java.util.Random;import java.util.Set;import java.util.TreeSet;import com.dianping.zebra.group.config.datasource.entity.DataSourceConfig;/** * 按权重做路由的DataSource选择器 */public class WeightDataSourceRouter implements DataSourceRouter {	private WeightRandom weightRandom;	public WeightDataSourceRouter(Map<String, DataSourceConfig> dataSourceConfigs) {		this.weightRandom = new WeightRandom(dataSourceConfigs);	}	@Override	public RouterTarget select(RouterContext routerInfo) {		return weightRandom.select(routerInfo.getExcludeTargets());	}	private static class WeightRandom {		private int groupDataSourceTargetSize = 0;		private TreeSet<RouterTarget> targets = new TreeSet<RouterTarget>();		private Random random = new Random();		public WeightRandom(Map<String, DataSourceConfig> configs) {			for (DataSourceConfig config : configs.values()) {				int weight = config.getWeight();				groupDataSourceTargetSize += weight;				RouterTarget groupDataSourceTarget = new RouterTarget(config.getId(), weight,						groupDataSourceTargetSize - 1);				targets.add(groupDataSourceTarget);			}		}		public RouterTarget select(Set<RouterTarget> excludeTargets) {			TreeSet<RouterTarget> weights = this.targets;			int tmpGroupDataSourceTargetSize = this.groupDataSourceTargetSize;			if (excludeTargets != null && !excludeTargets.isEmpty()) {				// 需要排除某些GroupDataSourceTarget的话，就重新copy一个weights				TreeSet<RouterTarget> copyWeights = new TreeSet<RouterTarget>(weights);				for (RouterTarget target : excludeTargets) {					if (copyWeights.remove(target)) {						tmpGroupDataSourceTargetSize -= target.getWeight();					}				}				weights = copyWeights;			}			if (weights.isEmpty() || tmpGroupDataSourceTargetSize <= 0) {				return null;			}			int randomNum = random.nextInt(tmpGroupDataSourceTargetSize);			RouterTarget tempForSearch = new RouterTarget(null, -1, randomNum);			return weights.ceiling(tempForSearch);		}	}	@Override	public String getName() {		return "weight-random";	}}