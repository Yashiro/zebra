class Application {
}

interface DataSourceManager {
+ DataSource getDataSource(String name)
}

interface DataSource <<java.sql.DataSource>> {
- String name
+ DataSourceState getState()
+ void markDown()
+ void markUp()
+ void reloadConfigure(DataSourceConfig config)
}

enum DataSourceState {
}

class DefaultDataSourceManager implements DataSourceManager {
- Map<String, DataSource> dataSources
}

class SimpleDataSource implements DataSource {
}

class GroupDataSource implements DataSource {
}

interface DataSourceConfigManager {
+ DataSourceConfig getConfig(String name)
+ void register(DataSourceConfigListener listener)
}

interface DataSourceConfig {
}

class SimpleDataSourceConfig implements DataSourceConfig {
- String dsId
}

class GroupDataSourceConfig implements DataSourceConfig {
}

class DefaultDataSourceConfigManager implements DataSourceConfigManager {
- Map<String, DataSourceConfig> configs
}

interface DataSourceConfigListener {
}

interface GroupDataSourceRouter {
}

interface PooledDataSourceManager {
+ PooledDataSource getDataSource(String name, String id)
}

Application .> DataSourceManager
DataSourceManager *..> "n" DataSource
SimpleDataSource *..>  PooledDataSourceManager
PooledDataSourceManager ..> PooledDataSource
DefaultDataSourceManager *..> DataSourceConfigManager
DataSourceConfigManager *..> "n" DataSourceConfig
GroupDataSource *.> SimpleDataSource
SimpleDataSource ..> SimpleDataSourceConfig
GroupDataSource ..> GroupDataSourceConfig
GroupDataSourceConfig *.> SimpleDataSourceConfig
GroupDataSource ..> GroupDataSourceRouter