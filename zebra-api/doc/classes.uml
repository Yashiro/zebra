class Application {
- DataSource datasource
}

interface ConfigService{
+ void init();
+ String getProperty(String key)
+ void addPropertyChangedListener(listener)
}

class LionConfigService extends ConfigService{
}

class LocalConfigService extends ConfigService{
}

interface DataSourceConfigManager{
+ void init()
+ Map<String, DataSourceConfig> getDataSourceConfigs()
+ String getRouterStrategy()
+ boolean isTransactionForceWrite()
+ void addListerner(PropertyChangeListener listener)
+ void markDown(String id)
+ void markUp(String id)
+ Map<String, DataSourceConfig> getAvailableDataSources()
+ Map<String, DataSourceConfig> getUnAvailableDataSources()
+ String getBiz()
}

abstract class AbstractConfigManager{
+ String name
}

class DefaultDataSourceConfigManager implements DataSourceConfigManager {
}

interface SystemConfigManager{
+ void init();
+ void addListener(PropertyChangeListener listener)
+ SystemConfig getSystemConfig()
}

class DefaultSystemConfigManager implements SystemConfigManager{
}
 
DefaultDataSourceConfigManager ..> AbstractConfigManager

DefaultSystemConfigManager ..> AbstractConfigManager

AbstractConfigManager ..> ConfigService

interface Connection {
+ void close()
}

interface DataSource {
+ Connection getConnection()
}

interface SharedDataSourceManager{
+void createDataSource(String biz, DataSourceConfig config)
+ Connection getConnection(String dsId) throws SQLException
+ void destory(String dsId, String biz)
+ void init()
}

class DefaultSharedDataSourceManager implements SharedDataSourceManager{
}

class GroupDataSource extends DataSource {
}

class SimpleDataSource extends DataSource{
}

class GroupDataSourceTarget {
- String id;
- boolean readOnly;
- int weight;
- int end;
}

class GroupDataSourceRouterInfo{
- String sql
- boolean forceWrite;
}

interface GroupDataSourceRouter{
+ GroupDataSourceTarget select(GroupDataSourceRouterInfo info);
}

class GroupWeightDataSourceRouter implements GroupDataSourceRouter{
}

class GroupReadWriteDataSourceRouter implements GroupDataSourceRouter{
}

GroupReadWriteDataSourceRouter ..>GroupWeightDataSourceRouter

GroupReadWriteDataSourceRouter ..> DataSourceConfigManager

GroupDataSource ..> GroupDataSourceRouter

GroupDataSource ..> DataSourceConfigManager

GroupDataSource ..> SystemConfigManager

GroupDataSource ..> SharedDataSourceManager

Application ..> DataSource

class DataSourceManager{
+ DataSource getDataSource(String name)
}
